后台框架机制：

1、前后台数据传输机制，
json请求提交
数据返回
格式转换
数据结构包装

2、异常处理机制，
后台异常捕获
异常日志记录
异常信息前台处理及展现

3、数据效验机制，
前台效验
后台效验
效验日志记录
效验结果前台展现

5、身份识别机制，
创建身份令牌
浏览启/APP存储令牌
服务端存储令牌
令牌验证及省份信息使用

6、数据库操作机制
O/R map框架使用模式
业务表操作模式



前台IONIC框架机制：

1、服务端异步通讯机制：
使用框架自带的服务$http、$q，在service中实现异步通讯机制。
可以实现单次操作完成后回调，或者多次操作完成后再统一回调。

2、mvc跨controller访问后台机制：
通常包装为factory服务，获取到的数据保存到这个服务的变量中。
这样这个服务可以在任何控制脚本中调用，可以在一个controller中触发和后台服务器通讯，在另一个controller中消费数据。

3、页面跳转机制：
使用框架自带的服务$state，在controller中实现页面跳转。

4、页面代码执行机制：
定义页面(state)时设置缓存为true(缺省为true)：
则：controller代码只在初始时执行一次，$ionicView.beforeEnter事件则会在每次进入页面时都执行一次。

5、页面组件和控制器通讯机制：
directive和controller通讯，可以使用$scope来传递变量，比如$scope .mapinfo.map = map;

6、$scope遍历机制：
$scope为树状结构，
访问原始数据类型时，会到本级scope中查找，没有则在本级scope创建；
访问对象或数组时，先找本级scope查找，没有会遍历查找上级；
所以要特别注意，controller/directive/view中使用scope变量时，优先定义JSON对象使用；

