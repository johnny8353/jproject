maven deploy - tomcat7
	1.Tomcat7的用户及权限配置：在conf目录下，找到tomcat-users.xml，添加manager权限的用户。这里我把所用的权限都添加给admin用户了，具体代码如下：
		<role rolename="admin-gui"/>
		<role rolename="admin-script"/>
		<role rolename="manager-gui"/>
		<role rolename="manager-script"/>
		<role rolename="manager-jmx"/>
		<role rolename="manager-status"/>
		<user username="admin" password="password" roles="manager-gui,manager-script,manager-jmx,manager-status,admin-script,admin-gui"/>
	2.Maven的Server的配置：在Maven的安装路径找到conf目录下的setting.xml文件，在<servers>节点中添加tomcat7下配置的用户信息（id可以任意填写，但username和password必须和步骤1一致）：
		<server>
			<id>tomcat7</id>
			<username>admin</username>
			<password>password</password>
		</server>
	3.在Web项目的pom.xml文件的<plugins>节点中，添加tomcat7的maven插件，
		<plugin>
		    <groupId>org.apache.tomcat.maven</groupId>
		    <artifactId>tomcat7-maven-plugin</artifactId>
		    <version>2.1</version>
		    <configuration>
		        <!-- 注意此处的url -->
		        <url>http://localhost:8080/manager/text</url>
		        <server>tomcat7</server> <!-- 此处的名字必须和setting.xml中配置的ID一致-->
		        <path>/mavenProject</path> <!-- 此处的名字是项目发布的工程名-->
		        <!-- <warFile>${project.build.directory}/testdemo.war</warFile> -->
		    </configuration>
		</plugin>
	4.最后，只需要mvn tomcat7:deploy就可以了
		1、必须事先启动tomcat服务器）
		2、mvn clean install -Dmaven.test.skip=true 保证war包已经生成
	
	最后，启动tomcat，在maven工程目录下运行命令：
		mvn war:exploded tomcat:exploded  //以目录方式部署
		或者mvn tomcat:deploy //以war形式部署
		可以搭配mvn tomcat:undeploy 以及 mvn tomcat:redeploy 配合使用。
		

注意：
	
	2>开始运行自动部署命令时，一定要先启动tomcat。否则会报下列错误：
		Cannot invoke Tomcat manager: Connection refused: connect -> [Help 1]  
	3>HTTP 403错误
		[ERROR] Failed to execute goal org.apache.tomcat.maven:tomcat-maven-plugin: 1.1:
		deploy (default-cli) on project XXX: Cannot invoke Tomcat manager: 
		Server returned HTTP response code: 403 for URL: 
		http://localhost:8080/manager/html/deploy?path=XXX -> [Help 1]
		1> 如果使用的是Tomcat 7，需要修改pom.xml中部署的url地址，将
			<url> http://localhost:8080/manager</url>
			改为
			<url> http://localhost:8080/manager/text</url>
	
		2> tomcat用户权限分配问题，需要同时具备manager-gui和manager-script权限，比如忘了分配manager-script权限。
			正确的conf/tomcat-users.xml配置应为：
			<tomcat-users>
			  <role rolename="manager-gui"/>
			  <role rolename="manager-script"/>
			  <user username="admin” password="admin" roles="manager-gui, manager-script"/>
			</tomcat-users>
			不过我的问题都不是上面两个，我的问题是自动部署命令写错了，应该是mvn tomcat7:deploy命令，而我之前用的是mvn tomcat:deploy命令
		
	4> “Application already exists at path”问题 使用tomcat7-maven-plugin插件部署到tomcat服务器时，当服务器上已经有相同名字的项目就会导致
		
		FAIL - Application already exists at path ...
		解决方法是在pom.xml文件中配置tomcat7-maven-plugin插件时加入参数update
		
		<plugin>
		  <groupId>org.apache.tomcat.maven</groupId>
		  <artifactId>tomcat7-maven-plugin</artifactId>
		  <version>2.0-SNAPSHOT</version>
		  <configuration>
		    <url>http://XXX:8080/manager/html</url>
		    <server>tomcat</server>
		    <username>admin</username>
		    <password>12345</password>
		    <path>/${finalName}</path>
		    <update>true</update>
		   </configuration>
		</plugin>
	
	5> “web.xml which will be ignored ”问题 在使用Maven 编译项目的时候会出现：
		
		[WARNING] Warning: selected war files include a WEB-INF/web.xml which will be ignored
		(webxml attribute is missing from war task, or ignoreWebxml attribute is specified as 'true')
		解决方法是添加下面这样一个plugin即可：
		
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-war-plugin</artifactId>
		  <version>2.1.1</version>
		  <configuration>
		     <packagingExcludes>WEB-INF/web.xml</packagingExcludes>
		  </configuration>
		</plugin>