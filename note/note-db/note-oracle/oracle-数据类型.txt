ORACLE基本数据类型（亦叫内置数据类型 built-in datatypes)可以按类型分为：字符串类型、数字类型、日期类型、LOB类型、LONG RAW& RAW类型、ROWID & UROWID类型。

一  字符串类型
	- 字符串数据类型还可以依据存储空间分为固定长度类型（CHAR/NCHAR) 和可变长度类型（VARCHAR2/NVARCHAR2)两种.
	- 所谓固定长度：是指虽然输入的字段值小于该字段的限制长度，但是实际存储数据时，会先自动向右补足空格后，才将字段值的内容存储到数据块中。
		这种方式虽然比较浪费空间，但是存储效率较可变长度类型要好。同时还能减少数据行迁移情况发生。
	- 所谓可变长度：是指当输入的字段值小于该字段的限制长度时，直接将字段值的内容存储到数据块中，而不会补上空白，这样可以节省数据块空间。
	
1.1：CHAR类型 CHAR(size [BYTE | CHAR])
	CHAR类型，定长字符串，会用空格填充来达到其最大长度。非NULL的CHAR（12）总是包含12字节信息。CHAR字段最多可以存储2,000字节的信息。
	如果创建表时，不指定CHAR长度，则默认为1。另外你可以指定它存储字节或字符，例如 CHAR(12 BYTYE) CHAR(12 CHAR).一般来说默认是存储字节，你可以查看数据库参数
	NLS_LENGTH_SEMANTICS的值	-	SQL> show parameter nls_length_semantics;
	
	注意：数据库的NLS_CHARACTERSET 为AL32UTF8，即一个汉字占用三到四个字节。如果NLS_CHARACTERSET为ZHS16GBK，则一个字符占用两个字节。
	
1.2： NCHAR类型
	这是一个包含UNICODE格式数据的定长字符串。NCHAR字段最多可以存储2,000字节的信息。它的最大长度取决于国家字符集。另外查询时，如果字段是NCHAR类型，则需要如下书写
	SELECT translated_description FROM product_descriptions
	WHERE translated_name = N'LCD Monitor 11/PM';

1.3 VARCHAR类型
	不要使用VARCHAR数据类型。使用VARCHAR2数据类型。虽然VARCHAR数据类型目前是VARCHAR2的同义词，VARCHAR数据类型将计划被重新定义为一个单独的数据类型用于可变长度的字符串相比，
	具有不同的比较语义。
	
	如果定义为VARCHAR2(50 CHAR),那么该列最多就可以存储50个汉字，如果定义字段为VARCHAR2（50） 或VARCHAR2（50 BYTE）那么它最多可以存储多少个汉字就要视数据库字符集编码决定。 
	
	ORACLE数据库汉字占用几个字节，要根据ORACLE中字符集编码决定，一般情况下，数据库的NLS_CHARACTERSET 为AL32UTF8或UTF8，即一个汉字占用三到四个字节。
	如果NLS_CHARACTERSET为ZHS16GBK，则一个字符占用两个字节. 
	
	具体查看占用三个字节还是四个字节
		SELECT LENGTH('您好') FROM DUAL; 
		SELECT LENGTHB('您好') FROM DUAL; 
		LENGTH函数求得是占用字符数，LENGTHB或者VSIZE函数求得是占用字节数。 
	如果Oracle 的字符集是Utf-8, 一个汉字三个字节，varchar2(4000)最多可以存1333个汉字，而varchar2(4000 char)其实和varchar2(1333 char)一样，也是只能存1333个汉字；
	如果Oracle的字符集是GBK,一个汉字是2个字节的话，varchar2(4000)最多可以存2000个汉字，而varchar2(4000 char)其实和varchar2(2000 char)一样，也是只能存2000个汉字；

1.4： VARCHAR2类型
	变长字符串，与CHAR类型不同，它不会使用空格填充至最大长度。VARCHAR2最多可以存储4,000字节的信息。
	
1.5： NVARCHAR2类型
	这是一个包含UNICODE格式数据的变长字符串。 NVARCHAR2最多可以存储4,000字节的信息。
	
二 数字类型
2.1 NUMBER类型
	NUMBER(P,S)是最常见的数字类型，可以存放数据范围为10^130~10^126（不包含此值)，需要1~22字节(BYTE)不等的存储空间。
	P 是Precison的英文缩写，即精度缩写，表示有效数字的位数，最多不能超过38个有效数字
	S是Scale的英文缩写，可以使用的范围为-84~127。Scale为正数时，表示从小数点到最低有效数字的位数，它为负数时，表示从最大有效数字到小数点的位数
	
	下面是官方文档的示例
	Actual Data		Specified As	Stored As
	123.89			NUMBER			123.89
	123.89			NUMBER(3)		124
	123.89			NUMBER(6,2)		123.89
	123.89			NUMBER(6,1)		123.9
	123.89			NUMBER(3)		124
	123.89			NUMBER(4,2)		exceeds precision
	123.89			NUMBER(6,-2)	100
	0.01234			NUMBER(4,5)		0.01234
	0.00012			NUMBER(4,5)		0.00012
	0.000127		NUMBER(4,5)		0.00013
	0.0000012		NUMBER(2,7)		0.0000012
	0.00000123		NUMBER(2,7)		0.0000012
	1.20E-04		NUMBER(2,5)		0.00012
	1.20E-05		NUMBER(2,5)		0.00001
	
2.2 INTEGER类型
	INTEGER是NUMBER的子类型，它等同于NUMBER（38,0），用来存储整数。若插入、更新的数值有小数，则会被四舍五入。
	例如：
	CREATE TABLE TEST
	(
		ID INTEGER
	)
	查看表TEST的DDL定义如下所示
	CREATE TABLE "SYS"."TEST"
	
	( "ID" NUMBER(*,0)
	
	) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
	STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
	PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
	TABLESPACE "SYSTEM" ;
	
三. 日期类型
	日期类型用于存储日期数据，但是并不是使用一般的格式（2012-08-08）直接存储到数据库的。
	3.1 DATE类型
	DATE是最常用的数据类型，日期数据类型存储日期和时间信息。虽然可以用字符或数字类型表示日期和时间信息，但是日期数据类型具有特殊关联的属性。
	为每个日期值，Oracle 存储以下信息： 世纪、 年、 月、 日期、 小时、 分钟和秒。一般占用7个字节的存储空间。
	
	3.2 TIMESTAMP类型
	这是一个7字节或12字节的定宽日期/时间数据类型。它与DATE数据类型不同，因为TIMESTAMP可以包含小数秒，带小数秒的TIMESTAMP在小数点右边最多可以保留9位
	
	3.3 TIMESTAMP WITH TIME ZONE类型
	这是TIMESTAMP类型的变种，它包含了时区偏移量的值
	
	3.4 TIMESTAMP WITH LOCAL TIME ZONE类型
	3.5 INTERVAL YEAR TO MOTH
	3.6 INTERVAL DAY TO SECOND

四. LOB类型
内置的LOB数据类型包括BLOB、CLOB、NCLOB、BFILE（外部存储）的大型化和非结构化数据，如文本、图像、视屏、空间数据存储。BLOB、CLOB、NCLOB类型
	4.1 CLOB 数据类型
	   它存储单字节和多字节字符数据。支持固定宽度和可变宽度的字符集。CLOB对象可以存储最多 (4 gigabytes-1) * (database block size) 大小的字符
	4.2 NCLOB 数据类型
	   它存储UNICODE类型的数据，支持固定宽度和可变宽度的字符集，NCLOB对象可以存储最多(4 gigabytes-1) * (database block size)大小的文本数据。
	4.3 BLOB 数据类型
	   它存储非结构化的二进制数据大对象，它可以被认为是没有字符集语义的比特流，一般是图像、声音、视频等文件。BLOB对象最多存储(4 gigabytes-1) * (database block size)的二进制数据。
	4.4 BFILE 数据类型
	   二进制文件，存储在数据库外的系统文件，只读的，数据库会将该文件当二进制文件处理

五. RAW & LONG RAW类型
5.1 LONG类型
	它存储变长字符串，最多达2G的字符数据（2GB是指2千兆字节， 而不是2千兆字符），与VARCHAR2 或CHAR 类型一样，存储在LONG 类型中的文本要进行字符集转换。
	ORACLE建议开发中使用CLOB替代LONG类型。支持LONG 列只是为了保证向后兼容性。CLOB类型比LONG类型的限制要少得多。 LONG类型的限制如下：
	1.一个表中只有一列可以为LONG型。(Why?有些不明白)
	2.LONG列不能定义为主键或唯一约束，
	3.不能建立索引
	4.LONG数据不能指定正则表达式。
	5.函数或存储过程不能接受LONG数据类型的参数。
	6.LONG列不能出现在WHERE子句或完整性约束（除了可能会出现NULL和NOT NULL约束）
	
5.2 LONG RAW 类型，能存储2GB 的原始二进制数据（不用进行字符集转换的数据）

5.3 RAW类型
	用于存储二进制或字符类型数据，变长二进制数据类型，这说明采用这种数据类型存储的数据不会发生字符集转换。这种类型最多可以存储2,000字节的信息

六. ROWID & UROWID类型
	在数据库中的每一行都有一个地址。然而，一些表行的地址不是物理或永久的，或者不是ORACLE数据库生成的。
	例如，索引组织表行地址存储在索引的叶子，可以移动。
	例如,外部表的ROWID（如通过网关访问DB2表）不是​​标准的ORACLE的rowid。
	ORACLE使用通用的ROWID（UROWIDs）的存储地址的索引组织表和外表。索引组织表有逻辑urowids的，和国外表的外urowids，。UROWID这两种类型的存储在ROWID伪（堆组织的表的物理行id）。
	创建基于逻辑的rowid在表中的主键。逻辑的rowid不会改变，只要主键不改变。索引组织表的ROWID伪UROWID数据类型。你可以访问这个伪列，你会堆组织表的ROWID伪
	（即使用一个SELECT ...ROWID语句）。如果你想存储的rowid索引组织表，那么你就可以定义一列的表型UROWID到列检索值的ROWID伪。	