Jetty有一个标语，“不要部署你的应用在Jetty上，部署Jetty在你的应用中”。这意味着可选择使用Jetty捆绑你的应用作为一个标准WAR进行部署。
Jetty设计成一个软件组件，可以实例化并且使用在Java程序中，例如：如何POJO。
但是另外一种方法，以嵌入式模式运行Jetty，这意味着把HTTP模块放入到你的应用中，而不是把你的应用放入到HTTP服务中。

静态资源锁定问题
	在jetty-6.1.5.jar中找到org/mortbay/jetty/webapp /webdefault.xml，搜索useFileMappedBuffer：
		<init-param>
		    <param-name>useFileMappedBuffer</param-name>
		    <param-value>true</param-value>
		</init-param>
	将param-value从true改为false即可。可以直接修改jar包内的这个文件，但是修改发行包毕竟不好，可以将此文件复制一份，在启动 Jetty时用自己的这个webdefault.xml覆盖Jetty的设置即可。加上：
		WebAppContext webapp = new WebAppContext();
		webapp.setDefaultsDescriptor("./webdefault.xml");
	重新启动后问题解决。

嵌入式启动	-	JettyStartDirectory
	WAR包形式启动	-	JettyStartWAR
	目录形式启动	-	JettyStartDirectory
	
	maven依赖：
	<!-- jetty dependecies begin -->
	<dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>jetty-server</artifactId>
		<version>${jetty.version}</version>
	</dependency>
	<dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>jetty-webapp</artifactId>
		<version>${jetty.version}</version>
	</dependency>

	<dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>jetty-continuation</artifactId>
		<version>${jetty.version}</version>
	</dependency>
	<dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>jetty-jsp</artifactId>
		<version>${jetty.version}</version>
		<scope>provided</scope>
		<exclusions>
			<exclusion>
				<groupId>org.eclipse.jetty.orbit</groupId>
				<artifactId>javax.servlet.jsp.jstl</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>jetty-http</artifactId>
		<version>${jetty.version}</version>
	</dependency>
	<dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>jetty-io</artifactId>
		<version>${jetty.version}</version>
	</dependency>
	<dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>jetty-util</artifactId>
		<version>${jetty.version}</version>
	</dependency>
	<dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>jetty-servlet</artifactId>
		<version>${jetty.version}</version>
		<scope>provided</scope>
	</dependency>
	<!-- jetty dependecies end -->